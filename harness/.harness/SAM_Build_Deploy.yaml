pipeline:
    name: SAM Build and Deploy
    identifier: SAM_Build_Deploy
    projectIdentifier: _mansong
    orgIdentifier: default
    tags:
        sam: ""
        lambda: ""
        python3.9: ""
        aws: ""
    properties:
        ci:
            codebase:
                connectorRef: mansongGithub
                repoName: musical-fortnight
                build: <+input>
    stages:
        - stage:
              name: Build and Test
              identifier: Build_and_Deploy
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: account.mansong_gke
                          namespace: harness-build
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: Check dind service
                                identifier: Check_dind_service
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: docker:dind
                                    command: |-
                                        while ! docker ps ;do
                                            echo "Docker not availble yet"
                                        done
                                            echo "Docker Service Ready"
                                    privileged: true
                          - parallel:
                                - step:
                                      type: Run
                                      name: DockerLint
                                      identifier: DockerLint
                                      spec:
                                          connectorRef: mansongdockerhub
                                          image: hadolint/hadolint:latest-alpine
                                          command: hadolint hello_world/Dockerfile
                                          privileged: false
                                - step:
                                      type: Run
                                      name: Lint
                                      identifier: Lint
                                      spec:
                                          connectorRef: mansongdockerhub
                                          image: cytopia/pylint
                                          command: pylint hello_world/ --disable=W,C
                                          privileged: false
                                - step:
                                      type: Run
                                      name: Audit
                                      identifier: Audit
                                      spec:
                                          connectorRef: mansongdockerhub
                                          image: pyupio/safety
                                          command: safety check
                                          privileged: false
                          - step:
                                type: Run
                                name: Unit Tests
                                identifier: Run_Tests
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: python:3.8-buster
                                    command: |-
                                        pip install pytest pytest-mock --user
                                        python -m pytest tests/ -v --junitxml="result.xml"
                                    privileged: false
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "*.xml"
                          - step:
                                type: Run
                                name: SAM Build
                                identifier: SAM_Build
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: amazon/aws-sam-cli-build-image-python3.9
                                    command: sam build
                                    privileged: false
                                    envVariables:
                                        SAM_CLI_TELEMETRY: "0"
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "2"
                          - step:
                                type: Run
                                name: Integration Tests
                                identifier: Integration_Tests
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: amazon/aws-sam-cli-build-image-python3.9
                                    command: sam local invoke HelloWorldFunction -e events/event.json
                                    privileged: false
                          - step:
                                type: Run
                                name: Scan Image
                                identifier: SAM_Image_Scan
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: aquasec/trivy
                                    command: trivy fs --security-checks vuln,config ./hello_world/
                                    privileged: false
                          - step:
                                type: Run
                                name: SAM Package
                                identifier: SAM_Package
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: amazon/aws-sam-cli-build-image-python3.9
                                    command: |-
                                        sam package --image-repository 759984737373.dkr.ecr.eu-west-2.amazonaws.com/mansong-sam --output-template-file packaged.yaml --region eu-west-2
                                        cat packaged.yaml
                                    privileged: false
                                    envVariables:
                                        AWS_ACCESS_KEY_ID: <+secrets.getValue("samAWSKeyID")>
                                        AWS_SECRET_ACCESS_KEY: <+secrets.getValue("samAWSSecret")>
                                        SAM_CLI_TELEMETRY: "0"
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                          - step:
                                type: S3Upload
                                name: S3 Upload
                                identifier: S3_Upload
                                spec:
                                    connectorRef: mansongaws
                                    region: eu-west-2
                                    bucket: mansong-sam
                                    sourcePath: ./aws-sam
                          - step:
                                type: Plugin
                                name: Github Release
                                identifier: Github_Release
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: plugins/github-release
                                    privileged: false
                                    settings:
                                        api_key: xxxx
                                        files: "*.toml"
                                        checksum: "[md5, sha256]"
                                        title: 0.0.1
                                        note: CHANGELOG.md
                                when:
                                    stageStatus: Success
                                    condition: <+trigger.branch> == "master"
                                failureStrategies: []
                      rollbackSteps: []
                  serviceDependencies:
                      - identifier: Dind_Dependency
                        name: Dind_Dependency
                        type: Service
                        spec:
                            connectorRef: mansongdockerhub
                            image: docker:dind
                            privileged: true
                  sharedPaths:
                      - /var/run
                      - /var/lib/docker
              variables:
                  - name: AWS_ACCESS_KEY_ID
                    type: Secret
                    value: awsKeyID
                  - name: AWS_SECRET_ACCESS_KEY
                    type: Secret
                    value: awsSecret
        - stage:
              name: Deploy
              identifier: Deploy
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: sam_dev
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                  infrastructure:
                      environmentRef: dev
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.mansong_gke
                              namespace: harness-deploy
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                type: ShellScript
                                name: SAM deploy
                                identifier: SAM_deploy
                                spec:
                                    shell: Bash
                                    onDelegate: true
                                    source:
                                        type: Inline
                                        spec:
                                            script: |-
                                                echo "sam deploy"

                                                export apiUrl="test"
                                    environmentVariables: []
                                    outputVariables:
                                        - name: apiUrl
                                          type: String
                                          value: apiUrl
                                    executionTarget: {}
                                    delegateSelectors:
                                        - mansong-gke
                                timeout: 10m
                                failureStrategies: []
                          - step:
                                type: Http
                                name: Http
                                identifier: Http
                                spec:
                                    method: GET
                                    headers: []
                                    outputVariables: []
                                    url: <+execution.steps.SAM_deploy.output.outputVariables.apiUrl>
                                timeout: 10s
                      rollbackSteps: []
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
